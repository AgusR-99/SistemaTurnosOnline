@page "/profile/general"
@using SistemaTurnosOnline.Web.Components.CssConstants
@using SistemaTurnosOnline.Web.Components.FormComponent
@using SistemaTurnosOnline.Web.Components.FormComponent.FormCheck
@using SistemaTurnosOnline.Web.Components.FormComponent.FormHeaders
@using SistemaTurnosOnline.Web.Components.SpinnerComponent
@using SistemaTurnosOnline.Web.Extensions
@inherits PerfilGeneralBase
@attribute [Authorize(Roles = "Admin, Guest")]

<Animate Animation="Animations.Fade">

    <Form Icon="@IconConstants.User" Header="@FormHeaderText.GeneralProfile">
        <EditForm Model=@Profesor OnValidSubmit="@UpdateProfesor_Click">
            <FluentValidationValidator />

            <FloatingInputText @bind-Value="Profesor.Dni" IsReadOnly="true"></FloatingInputText>

            <FloatingInputText @bind-Value="Profesor.Nombre"></FloatingInputText>

            <FloatingInputText @bind-Value="Profesor.Email"></FloatingInputText>

            @if (Carreras == null)
            {
                <SpinnerFormList/>
            }
            else
            {
                <FormCarreraComponent/>

                <FormCheckComponent>
                    @foreach (var carrera in CarrerasForm)
                    {
                        <FormCheckChildComponent>
                            @if (carrera.IsChecked)
                            {
                                <input class="form-check-input border-dark" type="checkbox" id="@carrera.Id" @onchange="() => Checkbox_Click(carrera.Id)" checked>
                            }
                            else
                            {
                                <input class="form-check-input border-dark" type="checkbox" id="@carrera.Id" @onchange="() => Checkbox_Click(carrera.Id)">
                            }
                            <label class="form-check-label" for="@carrera.Id">
                                @carrera.Nombre
                            </label>
                        </FormCheckChildComponent>
                    }
                </FormCheckComponent>
            }

            <ButtonSubmitWide Text="Actualizar"/>

        </EditForm>
    </Form>
</Animate>

<!-- Modal -->
<div class="modal fade" id="@ActualizadoProfesorModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="updatedModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updatedModalLabel">Accion realizada con exito</h5>
            </div>
            <div class="modal-body">
                Se ha actualizado la cuenta exitosamente
            </div>
            <div class="modal-footer justify-content-center">
                <a @onclick="() => Navigate_Click()" data-bs-dismiss="modal" class="btn btn-success">Aceptar</a>
            </div>
        </div>
    </div>
</div>